/*Interpreter.as is a neat facade for the Simplified JavaScript classes.*/package org.sixsided.scripting.SJS {	public class Interpreter {		public var vm:VM;		public var parser:Parser;  				private var opcode_array:Array;		public var opcode:String;		public var ast:String;		public function Interpreter(bootScript:String='') {			vm = new VM();			parser = new Parser();			if (bootScript) {				load(bootScript);				run();			}		}		public function load(script:String) {			parser.parse(script);			ast = parser.dump_ast();			vm.load(opcode_array = parser.codegen());			opcode = opcode_array.join(" ");		}		public function run() {			vm.run();		}		public function setGlobal(key:String, value:*) {			vm.set_global(key, value);// functions, variables, whatever		}		public function setGlobals(map:Object) {		  for(var key:String in map) {		    vm.set_global(key, map[key]);	    }    }	}}